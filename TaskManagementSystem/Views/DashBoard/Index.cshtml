@model IEnumerable<TaskManagementSystem.Models.Task>

@{
    ViewBag.Title = "Index";
    var assignedTasks = (List<TaskManagementSystem.Models.Task>)ViewBag.assignedTasks;
    var overdueTasks = (List<TaskManagementSystem.Models.Task>)ViewBag.overdueTaks;
    var soonEndTasks = (List<TaskManagementSystem.Models.Task>)ViewBag.soonEndTasks;
    var myCreatedTasks = (List<TaskManagementSystem.Models.Task>)ViewBag.myCreatedTasks;
}

<h2>Доска</h2>

@if (assignedTasks != null && assignedTasks.Count != 0)
{
    <div>
        <p>
            Ваши задачи:
        </p>
        <div id="tasks-notes" class="tasks-notes">
            <input type="text" class="search" />
            <button class="sort" data-sort="title">
                Сортировать по названию
            </button>
            <button class="sort" data-sort="priority">
                Сортировать по приоритету
            </button>
            <button class="sort" data-sort="time">
                Сортировать по времени
            </button>
            <button class="sort" data-sort="type">
                Сортировать по типу
            </button>
            @Html.Partial("ShowListTasks", assignedTasks)
        </div>
        </div>
}
else
{
    <p>В данный момент у вас нет задач</p>
}

@if (myCreatedTasks != null && myCreatedTasks.Count != 0)
{
    
        <p>
            Созданные вами задачи:
        </p>
        <div class="tasks-notes">
            @Html.Partial("ShowListTasks", myCreatedTasks)

        </div>
}

            
            
@section Scripts {
<script type="text/javascript">
    function GetNotifications() {
        $.getJSON('@Url.Action("GetNotifications")', function (data) {
            
            for (var i = 0; i < data.Data.length; i++) {
                console.log(data.Data[i].Key);
                toastr[data.Data[i].Key](data.Data[i].Value)
            }
        });
    }

    $(document).ready(function () {
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "positionClass": "toast-top-right",
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }

        GetNotifications();
    })
 </script>
}
    