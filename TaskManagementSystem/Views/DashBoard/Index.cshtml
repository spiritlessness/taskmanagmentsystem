@model IEnumerable<TaskManagementSystem.Models.Task>

@{
    ViewBag.Title = "Index";
    var assignedTasks = (List<TaskManagementSystem.Models.Task>)ViewBag.assignedTasks;
    var overdueTasks = (List<TaskManagementSystem.Models.Task>)ViewBag.overdueTaks;
    var soonEndTasks = (List<TaskManagementSystem.Models.Task>)ViewBag.soonEndTasks;
    var myCreatedTasks = (List<TaskManagementSystem.Models.Task>)ViewBag.myCreatedTasks;
}

@if (assignedTasks != null && assignedTasks.Count != 0)
{
    <div>
        <h2>
            Ваши задачи:
        </h2>
        <div id="tasks-notes" class="tasks-notes">
            <input type="text" class="search" />
            <select class="sort">
                <option value="title">
                    Сортировать по названию
                </option>
                <option value="priority">
                    Сортировать по приоритету
                </option>
                <option value="time">
                    Сортировать по времени
                </option>
                <option value="type">
                    Сортировать по типу
                </option>
            </select>
            @Html.Partial("ShowListTasks", assignedTasks)
        </div>
        </div>
}
else
{
    <h2>В данный момент у вас нет задач</h2>
}

@if (myCreatedTasks != null && myCreatedTasks.Count != 0)
{
    
        <h2>
            Вы отвественны за задачи:
        </h2>
        <div id="tasks-notes2" class="tasks-notes">
            <input type="text" class="search" />
            <select class="sort2">
                <option value="title">
                    Сортировать по названию
                </option>
                <option value="priority">
                    Сортировать по приоритету
                </option>
                <option value="time">
                    Сортировать по времени
                </option>
                <option value="type">
                    Сортировать по типу
                </option>
            </select>
            @Html.Partial("ShowListTasks", myCreatedTasks)

        </div>
}

            
            
@section Scripts {
<script type="text/javascript">
    function GetNotifications() {
        $.getJSON('@Url.Action("GetNotifications")', function (data) {
            
            for (var i = 0; i < data.Data.length; i++) {
                console.log(data.Data[i].Key);
                toastr[data.Data[i].Key](data.Data[i].Value)
            }
        });
    }

    $(document).ready(function () {
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "positionClass": "toast-top-right",
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }

        GetNotifications();
    })

    var list = new List('tasks-notes', {
        valueNames: ['title', 'description', 'priority', 'time', 'type'],
        page: 10,
        pagination: true
    }
                );

    $('select.sort').change(function () {
        var selection = $(this).val();
        list.sort(selection);
    });
    var list2 = new List('tasks-notes2', {
        valueNames: ['title', 'description', 'priority', 'time', 'type'],
        page: 10,
        pagination: true
    }
            );
    $('select.sort2').change(function () {
        var selection = $(this).val();
        list.sort(selection);
    });
 </script>
}
    