@model TaskManagementSystem.Models.Task

@{
    ViewBag.Title = "Create";
    TaskManagementSystem.Models.Task parentTask = null;
    if (ViewBag.ParentTask != null)
    {
        parentTask = ViewBag.ParentTask as TaskManagementSystem.Models.Task;
    }
    bool fromTemplate = false;
    if (ViewBag.fromTemplate != null)
    {
        fromTemplate = ViewBag.fromTemplate;
    }
    bool isTemplate = false;
    if (ViewBag.fromTemplate != null)
    {
        isTemplate = ViewBag.isTemplate;
    }
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Добавить @if (isTemplate) { <span>шаблон</span> } else {  <span>задачу</span> }</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (fromTemplate)
        {   
        <div class="form-group">
            @Html.Label("Выберите шаблон", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TemplateId", null, " ", htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
        }
        <input type="hidden" value="@isTemplate.ToString()" name="isTemplate" id="isTemplate" />
        @if(parentTask!=null)
         {
        <div class="form-group">
            @Html.LabelFor(model => model.ParentTask, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @parentTask.Title
                @Html.Hidden("ParentTaskId", parentTask.ID)
            </div>
        </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (!isTemplate)
        {
        <div class="form-group">
            @Html.LabelFor(model => model.GroupId, "Назначить группе", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GroupId, null, null, htmlAttributes: new { @class = "form-control", multiple = "multiple", style = "display:none" }) 
                @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssignedUserId, "Назначить пользователю", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AssignedUserId, null, null, htmlAttributes: new { @class = "form-control", multiple = "multiple", style = "display:none" })
                @Html.ValidationMessageFor(model => model.AssignedUserId, "", new { @class = "text-danger" })
            </div>
        </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.TaskTypeId, "Тип задачи", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TaskTypeId", null, htmlAttributes: new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.TaskTypeId, "", new { @class = "text-danger" })
 
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskPriorityId, "Приоритет", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TaskPriorityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TaskPriorityId, "", new { @class = "text-danger" })
            </div>
        </div>
       @if (!isTemplate)
       {
        <div class="form-group">
            @Html.LabelFor(model => model.ScheduledTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ScheduledTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ScheduledTime, "", new { @class = "text-danger" })
            </div>
        </div>
       }
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectId, "ProjectId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (!isTemplate)
        {
        @Html.Partial("CreateAttachment")
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/datetimepicker")
    @Styles.Render("~/Content/datetimepicker")
    @Scripts.Render("~/bundles/jqueryval")

       <script type="text/javascript">

        $(document).ready(function () {
            $("#ScheduledTime").datetimepicker();
            $("#AssignedUserId").multiselect();
            $("#GroupId").multiselect();
        });
        
        $("#TemplateId").change(function()
        {
            $.getJSON('@Url.Action("GetTemplate")?id='+$("#TemplateId").val(), function (data) {
                Object.keys(data).forEach(function (key) {
                    $("#" + key).val(data[key]).change();;
                });
            })
        })
</script>
}
